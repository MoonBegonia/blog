name: Deployment

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the hexo branch (change to your hexo blog branch)
on:
  push:
    branches: [hexo]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  hexo-deployment:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout source
        uses: actions/checkout@v2

      # - name: Setup python
      #   uses: actions/setup-python@v1
      #   with:
      #     python-version: '3.6'

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"

      - name: Yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # - name: Get pip cache
      #   id: pip-cache
      #   run: |
      #     python -c "from pip._internal.locations import USER_CACHE_DIR; print('::set-output name=dir::' + USER_CACHE_DIR)"

      # - name: Get coscmd's requirements
      #   run: wget https://raw.githubusercontent.com/tencentyun/coscmd/master/requirements.txt

      # - name: Pip cache
      #   uses: actions/cache@v1
      #   with:
      #     path: ${{ steps.pip-cache.outputs.dir }}
      #     key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
      #     restore-keys: |
      #       ${{ runner.os }}-pip-

      - name: Change post files modified time
        run: |
          find source/_posts -name '*.md' | while read file
          do touch -d "$(git log -1 --format="@%ct" "$file")" "$file"
          done

      - name: Install dependencies
        run: yarn install

      - name: Generate site
        run: |
          yarn clean
          yarn build

      # - name: Setup coscmd
      #   env:
      #     SECRET_ID: ${{ secrets.COS_KEY_ID }}
      #     SECRET_KEY: ${{ secrets.COS_KEY_SECERT }}
      #     BUCKET: ${{ secrets.COS_BUCKET }}
      #     REGION: ${{ secrets.COS_REGION }}
      #   run: |
      #     pip install coscmd
      #     coscmd config -a $SECRET_ID -s $SECRET_KEY -b $BUCKET -r $REGION -m 30

      # - name: Deploy to cos
      #   run: |
      #     coscmd upload -rs --delete -f public/css next/css
      #     coscmd upload -rs --delete -f public/js next/js
      #     coscmd upload -rs --delete -f public/images next/images

      - name: Setup oss util
        uses: manyuanrong/setup-ossutil@v2.0
        with:
          endpoint: '${{ secrets.OSS_ENDPOINT }}'
          access-key-id: '${{ secrets.OSS_KEY_ID }}'
          access-key-secret: '${{ secrets.OSS_KEY_SECRET }}'

      - name: Clean bucket
        run: ossutil rm oss://${{ secrets.OSS_BUCKET }}/ -rf

      - name: Deploy to oss
        run: ossutil cp public/ oss://${{ secrets.OSS_BUCKET }}/ -rf

      - name: Notification
        if: cancelled() == false
        uses: xinthink/action-telegram@v1.1
        with:
          botToken: ${{ secrets.TG_BOT_TOKEN }}
          chatId: ${{ secrets.TG_CHAT_ID }}
          jobStatus: ${{ job.status }}
          skipSuccess: false
